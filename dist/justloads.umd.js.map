{"version":3,"file":"justloads.umd.js","sources":["../src/constants/global.js","../src/constants/types.js","../src/helper/firstToUpper.js","../src/helper/getFactoryName.js","../src/helper/isString.js","../src/helper/forEach.js","../src/helper/createOrModifyElement.js","../src/helper/insertElement.js","../src/helper/loadElementPromise.js","../src/loader/ElementLoader.js","../src/loader/Loaders.js","../src/factories/LoaderFactory.js","../src/constants/status_resource.js","../src/models/Resource.js","../src/models/ElementResource.js","../src/models/JsResource.js","../src/constants/resource.js","../src/models/CssResource.js","../src/models/Resources.js","../src/helper/getFileExtension.js","../src/helper/resolveType.js","../src/factories/ResourceManager.js","../src/helper/isFunction.js","../src/models/Queue.js","../src/models/ObjectFnQueue.js","../src/index.js"],"sourcesContent":["export const d = document;\nexport const w = window;\nexport const getElementsByTagName = 'getElementsByTagName';\nexport const readyState = 'readyState';\nexport const onreadystatechange = 'onreadystatechange';\nexport const addEventListener = 'addEventListener';\n","/**\n *\n * @type {string}\n */\nexport const TYPE_JS = 'js';\n\n/**\n *\n * @type {string}\n */\nexport const TYPE_CSS = 'css';\n\n/**\n *\n * @type {string}\n */\nconst TYPE_ELEMENT = 'element';\n\n/**\n *\n * @type {[string]}\n */\nexport const TYPE_CONSTANTS = [\n  TYPE_JS,\n  TYPE_CSS,\n  TYPE_ELEMENT\n];\n\nexport const TYPE_HIERARCHIES = {};\n\nTYPE_HIERARCHIES[TYPE_JS] = TYPE_ELEMENT;\nTYPE_HIERARCHIES[TYPE_CSS] = TYPE_ELEMENT;\n\n// export TYPE_HIERARCHIES;\n","/**\n * capitalizes the first letter of a given text string\n * @param {string} text\n */\nexport default function firstToUpper(text) {\n  return text.charAt(0)\n      .toUpperCase() + text.slice(1);\n}\n","import firstToUpper from './firstToUpper';\n\n/**\n *\n * @param {string} name\n * @param {string} [suffix]\n * @return {string}\n */\nexport default function getFactoryName(name, suffix = '') {\n  return firstToUpper(name) + suffix;\n}\n","/**\n * checks if the value of a variable is from type string\n * @param {*} variable\n * @return {*|boolean}\n */\nexport default function isString(variable) {\n  return typeof variable === 'string' || variable instanceof String;\n}\n","/**\n *\n * @param {Object} obj\n * @param {Function} callback\n */\nexport default function forEach(obj, callback) {\n  Object.keys(obj)\n    .forEach(key => {\n      callback(obj[key], key);\n    });\n}\n","/**\n * Creates an Element with a given type and a number of attributes\n *\n * @param {string|Element} typeOrElement\n * @param {Object} [attributes]\n * @returns {Element}\n */\nimport isString from './isString';\nimport { d } from './../constants/global';\nimport forEach from './forEach';\n\nexport default function createOrModifyElement(typeOrElement, attributes = {}) {\n  let element;\n\n  if (isString(typeOrElement)) {\n    element = d.createElement(typeOrElement);\n  } else {\n    element = typeOrElement;\n  }\n\n  forEach(attributes, (value, key) => element.setAttribute(key, value));\n\n  return element;\n}\n","import { d, getElementsByTagName } from './../constants/global';\n\n/**\n * gets the element head\n * @returns {Node}\n */\nexport function getHead() {\n  return d[getElementsByTagName]('head')[0] || d.documentElement;\n}\n\nconst defaultRefs = (d.body || getHead()).childNodes;\nconst defaultRef = defaultRefs[defaultRefs.length - 1];\n\n/**\n * inserts an element before the given ref or if no reference is given as the last element\n * of the body or head depending on what is already registered\n * @param {Element} element\n * @param {Node} [ref]\n */\nexport default function insertElement(element, ref = defaultRef) {\n  ref.parentNode.insertBefore(element, ref);\n}\n","import { readyState, onreadystatechange, addEventListener } from './../constants/global';\n\n/**\n *\n * @param {Element} element\n * @returns {Promise}\n */\nexport default function loadElementPromise(element) {\n  let complete = false;\n\n  return new Promise((resolve, reject) => {\n    const rejectHandler = function rejectCb(error) {\n      reject(error, element);\n    };\n    const resolveHandler = function rejectCb() {\n      resolve(element);\n    };\n\n    if (element[readyState]) {\n      element[onreadystatechange] = function onReadyStateChangeHandler() {\n        if (!complete && (element[readyState] === 'complete')) {\n          complete = true;\n          resolveHandler();\n        }\n      };\n    } else {\n      element[addEventListener]('load', resolveHandler);\n    }\n\n    element[addEventListener]('error', rejectHandler);\n    element[addEventListener]('abort', rejectHandler);\n  });\n}\n","import createOrModifyElement from '../helper/createOrModifyElement';\nimport insertElement from '../helper/insertElement';\nimport loadElementPromise from '../helper/loadElementPromise';\n\nclass ElementLoader {\n  /**\n   *\n   * @param {ElementResource} resource\n   * @returns {Promise}\n   */\n  load(resource) {\n    const element = createOrModifyElement(resource.tag, resource.attr);\n\n    const promise = loadElementPromise(element);\n    promise.then(\n      element => createOrModifyElement(element, resource.sAttr),\n      (error, element) => createOrModifyElement(element, resource.fAttr));\n\n    insertElement(element);\n\n    return promise;\n  }\n}\n\nexport default ElementLoader;\n","import ElementLoader from './ElementLoader';\n\nexport default {\n  ElementLoader\n};\n\n","import { TYPE_CONSTANTS, TYPE_HIERARCHIES } from '../constants/types';\nimport getFactoryName from '../helper/getFactoryName';\nimport Loaders from '../loader/Loaders';\n\nconst LoaderFactory = (() => {\n  const loaderStorage = {};\n\n  /**\n   *\n   * @param {string} type\n   * @return {ElementLoader}\n   */\n  function get(type) {\n    if (TYPE_CONSTANTS.indexOf(type) === -1) {\n      throw new ReferenceError(`You tried to get an unsupported loader of type ${type}`);\n    }\n\n    let hierarchyType = TYPE_HIERARCHIES[type];\n\n    if (hierarchyType) {\n      type = hierarchyType;\n    }\n\n    const storedLoader = loaderStorage[type];\n\n    if (storedLoader) {\n      return storedLoader;\n    }\n\n    const newLoader = new Loaders[getFactoryName(type, 'Loader')]();\n    loaderStorage[type] = newLoader;\n    return newLoader;\n  }\n\n  /**\n   *\n   * @param {Resource} resource\n   * @returns {Promise}\n   */\n  function load(resource) {\n    return get(resource.type)\n      .load(resource);\n  }\n\n  return {\n    load\n  };\n})();\n\nexport default LoaderFactory;\n","/**\n *\n * @type {string}\n */\nexport const RESOURCE_INITIALIZED = 'initialized';\n\n/**\n *\n * @type {string}\n */\nexport const RESOURCE_STARTED = 'started';\n\n/**\n *\n * @type {string}\n */\nexport const RESOURCE_FAILED = 'failed';\n\n/**\n *\n * @type {string}\n */\nexport const RESOURCE_SUCCESS = 'success';\n\n/**\n *\n * @type {[string]}\n */\nexport const RESOURCE_CONSTANTS = [\n  RESOURCE_INITIALIZED,\n  RESOURCE_STARTED,\n  RESOURCE_FAILED,\n  RESOURCE_SUCCESS\n];\n","import { RESOURCE_INITIALIZED } from '../constants/status_resource';\n\n/**\n *\n */\nexport default class Resource {\n  /**\n   * constructor for the resource\n   *\n   * @param {{key:string, type:string, url:string, [status]: string}} options\n   */\n  constructor(options) {\n    this.key = options.key;\n    this.type = options.type;\n    this.url = options.url;\n    this.status = options.status || RESOURCE_INITIALIZED;\n  }\n}\n","import Resource from './Resource';\n\nclass ElementResource extends Resource {\n  /**\n   * constructor for the resource\n   *\n   * @param {{key:string, tag: string, type:string, options: object, [status]: string, [attr]:object, [fAttr]: object, [sAttr]: object}} options\n   */\n  constructor(options) {\n    super(options);\n    this.tag = options.tag;\n    this.attr = options.attr || {};\n    this.fAttr = options.fAttr || {};\n    this.sAttr = options.sAttr || {};\n  }\n}\n\nexport default ElementResource;\n","import ElementResource from './ElementResource';\n\nclass JsResource extends ElementResource {\n  constructor(options) {\n    super(options);\n\n    this.tag = this.tag || 'script';\n\n    const attr = this.attr;\n\n    attr.src = attr.src || this.url;\n    attr.type = attr.type || 'text/javascript';\n    attr.defer = attr.defer || 1;\n  }\n}\n\nexport default JsResource;\n","export const SCRIPT_ASYNC = 'async';\nexport const SCRIPT_DEFER = 'defer';\nexport const SCRIPT_BLOCKING = 'blocking';\nexport const STYLE_MEDIA_DEFAULT = 'all';\n","import ElementResource from './ElementResource';\nimport { STYLE_MEDIA_DEFAULT } from '../constants/resource';\n\nclass CssResource extends ElementResource {\n  constructor(options) {\n    super(options);\n\n    this.tag = this.tag || 'link';\n\n    const attr = this.attr;\n\n    attr.rel = attr.rel || 'stylesheet';\n    attr.media = attr.media || 'x';\n    attr.href = attr.href || this.url;\n\n    const sAttr = this.sAttr;\n\n    sAttr.media = sAttr.media || STYLE_MEDIA_DEFAULT;\n  }\n}\n\nexport default CssResource;\n","import JsResource from './JsResource';\nimport ElementResource from './ElementResource';\nimport CssResource from './CssResource';\n\nexport default {\n  JsResource,\n  CssResource,\n  ElementResource\n};\n\n","/**\n * @param {string} pathOrUrl\n */\nexport default function getFileExtension(pathOrUrl) {\n  const ext = pathOrUrl.substr(pathOrUrl.lastIndexOf('.') + 1);\n\n  return ext.split('?')[0];\n}\n","import getFileExtension from './getFileExtension';\nimport { TYPE_CSS, TYPE_JS } from '../constants/types';\n\nexport default function resolveType(url) {\n  const ext = getFileExtension(url);\n  let type = false;\n\n  if (ext === 'js') {\n    type = TYPE_JS;\n  } else if (ext === 'css') {\n    type = TYPE_CSS;\n  }\n\n  return type;\n}\n","/**\n *\n * @return {{createResource: (function({key: string, type: string, options: Object, status?: string}))}}\n * @constructor\n */\nimport { TYPE_CONSTANTS } from '../constants/types';\nimport getFactoryName from '../helper/getFactoryName';\nimport Resources from '../models/Resources';\nimport isString from '../helper/isString';\nimport resolveType from '../helper/resolveType';\n\nconst ResourceManager = (() => {\n  /**\n   *\n   * @type {Object}\n   */\n  const resourceStorage = {};\n\n  /**\n   * @param {{key:string, type:string, [status]: string}} options\n   * @return {Resource}\n   */\n  function create(options) {\n    options.type = options.type || resolveType(options.url || '');\n\n    const type = options.type;\n\n    if (TYPE_CONSTANTS.indexOf(type) === -1) {\n      throw new ReferenceError(`You tried to get an unsupported resource of type ${type}`);\n    }\n\n    return new Resources[getFactoryName(type, 'Resource')](options);\n  }\n\n  /**\n   *\n   * @param {string|object} keyOrOptions\n   * @returns {Resource}\n   */\n  function get(keyOrOptions) {\n    let options = keyOrOptions;\n\n    if (isString(keyOrOptions)) {\n      options = {\n        key: keyOrOptions,\n        url: keyOrOptions\n      };\n    }\n\n    const key = options.key;\n    const storedResource = resourceStorage[key];\n\n    if (storedResource) {\n      return storedResource;\n    }\n\n    const resource = create(options);\n\n    resourceStorage[key] = resource;\n\n    return resource;\n  }\n\n  return {\n    get\n  };\n})();\n\nexport default ResourceManager;\n","const betterIsFunctionPossible = typeof /./ !== 'function' && typeof Int8Array !== 'object' &&\n  typeof NodeList !== 'function';\n\n/**\n * resolves whether a variable is of type function\n * @param {*} variable\n * @return {boolean}\n */\nfunction functionTypeCheck(variable) {\n  if (betterIsFunctionPossible) {\n    return typeof variable === 'function' || false;\n  }\n\n  const getType = {};\n\n  return getType.toString.call(variable) === '[object Function]';\n}\n\n/**\n * checks whether variable is a function\n * @param {*} variable\n * @return {*|boolean}\n */\nexport default function isFunction(variable) {\n  return variable && functionTypeCheck(variable);\n}\n","import isFunction from '../helper/isFunction';\n\nclass Queue {\n  constructor(initial = [], clone = false) {\n    if (clone) {\n      this.queue = initial.slice(0);\n    } else {\n      this.queue = initial;\n    }\n  }\n\n  checkMethod(fn) {\n    if (!isFunction(fn)) {\n      throw new TypeError('fn must be a function');\n    }\n  }\n\n  /**\n   *\n   */\n  empty() {\n    const queue = this.queue;\n    while (queue.length) {\n      const current = queue.shift();\n      this.call(...current);\n    }\n  }\n\n  /**\n   *\n   * @param fn\n   * @param args\n   */\n  call(fn, args = []) {\n    this.checkMethod(fn);\n    fn(...args);\n  }\n\n  push(...args) {\n    this.call(...args);\n  }\n}\n\nexport default Queue;\n","import Queue from './Queue';\n\nclass ObjectFnQueue extends Queue {\n  /**\n   *\n   * @param {Object} obj\n   * @param {Array} initial\n   * @param {boolean} clone\n   */\n  constructor(obj, initial = [], clone = false) {\n    super(initial, clone);\n\n    this.obj = obj;\n  }\n\n  /**\n   *\n   * @param {string} methodName\n   * @return {Function}\n   * @private\n   */\n  resolveFn(methodName) {\n    const fn = this.obj[methodName];\n\n    try {\n      this.checkMethod(fn);\n    } catch (e) {\n      throw new ReferenceError(`The function ${methodName} does not exist.'`);\n    }\n\n    return fn;\n  }\n\n  /**\n   *\n   * @param {string} methodName\n   * @param {Array} methodArgs\n   */\n  call(methodName, methodArgs = []) {\n    if (!methodName) {\n      throw new RangeError('please provide at least one argument');\n    }\n\n    super.call(this.resolveFn(methodName), methodArgs);\n  }\n}\n\nexport default ObjectFnQueue;\n","// Import a couple modules for testing.\nimport { w } from './constants/global';\nimport LoaderFactory from './factories/LoaderFactory';\nimport ResourceManager from './factories/ResourceManager';\nimport ObjectFnQueue from './models/ObjectFnQueue';\n\nconst time = performance.now();\n\nconst justloads = {\n  load: (options) => {\n    const resource = ResourceManager.get(options);\n    LoaderFactory.load(resource)\n      .then(() => {\n        //console.log(`${(performance.now() - time)}: ${resource.key}`);\n      });\n  },\n};\n\nconst jlQueueName = 'jl_queue';\nconst jlQueue = new ObjectFnQueue(justloads, w[jlQueueName] || []);\njlQueue.empty();\nw[jlQueueName] = jlQueue;\n\nexport default justloads;\n"],"names":["const","let","super","this"],"mappings":";;;;;;AAAOA,IAAM,CAAC,GAAG,QAAQ,CAAC;AAC1B,AAAOA,IAAM,CAAC,GAAG,MAAM,CAAC;AACxB,AAAOA,IAAM,oBAAoB,GAAG,sBAAsB,CAAC;AAC3D,AAAOA,IAAM,UAAU,GAAG,YAAY,CAAC;AACvC,AAAOA,IAAM,kBAAkB,GAAG,oBAAoB,CAAC;AACvD,AAAOA,IAAM,gBAAgB,GAAG,kBAAkB,CAAC;;ACLnD;;;;AAIA,AAAOA,IAAM,OAAO,GAAG,IAAI,CAAC;;;;;;AAM5B,AAAOA,IAAM,QAAQ,GAAG,KAAK,CAAC;;;;;;AAM9BA,IAAM,YAAY,GAAG,SAAS,CAAC;;;;;;AAM/B,AAAOA,IAAM,cAAc,GAAG;EAC5B,OAAO;EACP,QAAQ;EACR,YAAY;CACb,CAAC;;AAEF,AAAOA,IAAM,gBAAgB,GAAG,EAAE,CAAC;;AAEnC,gBAAgB,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;AACzC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;;;;AC/B1C;;;;AAIA,AAAe,SAAS,YAAY,CAAC,IAAI,EAAE;EACzC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;OAChB,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACpC;;;;;;;;ACCD,AAAe,SAAS,cAAc,CAAC,IAAI,EAAE,MAAW,EAAE;iCAAP,GAAG,EAAE;;EACtD,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;CACpC;;ACVD;;;;;AAKA,AAAe,SAAS,QAAQ,CAAC,QAAQ,EAAE;EACzC,OAAO,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,YAAY,MAAM,CAAC;CACnE;;ACPD;;;;;AAKA,AAAe,SAAS,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE;EAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;KACb,OAAO,CAAC,UAAA,GAAG,EAAC;MACX,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;KACzB,CAAC,CAAC;CACN;;ACVD;;;;;;;AAOA,AACA,AACA,AAEA,AAAe,SAAS,qBAAqB,CAAC,aAAa,EAAE,UAAe,EAAE;yCAAP,GAAG,EAAE;;EAC1EC,IAAI,OAAO,CAAC;;EAEZ,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE;IAC3B,OAAO,GAAG,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;GAC1C,MAAM;IACL,OAAO,GAAG,aAAa,CAAC;GACzB;;EAED,OAAO,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,GAAG,EAAE,SAAG,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,GAAA,CAAC,CAAC;;EAEtE,OAAO,OAAO,CAAC;CAChB;;;;;;ACjBD,AAAO,SAAS,OAAO,GAAG;EACxB,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC;CAChE;;AAEDD,IAAM,WAAW,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,EAAE,EAAE,UAAU,CAAC;AACrDA,IAAM,UAAU,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;;;;;;;AAQvD,AAAe,SAAS,aAAa,CAAC,OAAO,EAAE,GAAgB,EAAE;2BAAf,GAAG,UAAU;;EAC7D,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;CAC3C;;;;;;;ACdD,AAAe,SAAS,kBAAkB,CAAC,OAAO,EAAE;EAClDC,IAAI,QAAQ,GAAG,KAAK,CAAC;;EAErB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAE;IACnCD,IAAM,aAAa,GAAG,SAAS,QAAQ,CAAC,KAAK,EAAE;MAC7C,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACxB,CAAC;IACFA,IAAM,cAAc,GAAG,SAAS,QAAQ,GAAG;MACzC,OAAO,CAAC,OAAO,CAAC,CAAC;KAClB,CAAC;;IAEF,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;MACvB,OAAO,CAAC,kBAAkB,CAAC,GAAG,SAAS,yBAAyB,GAAG;QACjE,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,UAAU,CAAC,KAAK,UAAU,CAAC,EAAE;UACrD,QAAQ,GAAG,IAAI,CAAC;UAChB,cAAc,EAAE,CAAC;SAClB;OACF,CAAC;KACH,MAAM;MACL,OAAO,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;KACnD;;IAED,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IAClD,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;GACnD,CAAC,CAAC;CACJ;;AC5BD,IAAM,aAAa,GAAC;;AAAA,wBAMlB,IAAI,kBAAC,QAAQ,EAAE;EACf,IAAQ,OAAO,GAAG,qBAAqB,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;;EAErE,IAAQ,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAC9C,OAAS,CAAC,IAAI;IACZ,UAAE,OAAO,EAAC,SAAG,qBAAqB,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAA;IAC3D,UAAG,KAAK,EAAE,OAAO,EAAE,SAAG,qBAAqB,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;;EAExE,aAAe,CAAC,OAAO,CAAC,CAAC;;EAEzB,OAAS,OAAO,CAAC;CAChB,CAAA,AAGH,AAA6B;;ACtB7B,cAAe;EACb,eAAA,aAAa;CACd,CAAC;;ACAFA,IAAM,aAAa,GAAG,CAAC,YAAG;EACxBA,IAAM,aAAa,GAAG,EAAE,CAAC;;;;;;;EAOzB,SAAS,GAAG,CAAC,IAAI,EAAE;IACjB,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACvC,MAAM,IAAI,cAAc,EAAC,iDAAgD,GAAE,IAAI,EAAG,CAAC;KACpF;;IAEDC,IAAI,aAAa,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;;IAE3C,IAAI,aAAa,EAAE;MACjB,IAAI,GAAG,aAAa,CAAC;KACtB;;IAEDD,IAAM,YAAY,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;;IAEzC,IAAI,YAAY,EAAE;MAChB,OAAO,YAAY,CAAC;KACrB;;IAEDA,IAAM,SAAS,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC;IAChE,aAAa,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IAChC,OAAO,SAAS,CAAC;GAClB;;;;;;;EAOD,SAAS,IAAI,CAAC,QAAQ,EAAE;IACtB,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;OACtB,IAAI,CAAC,QAAQ,CAAC,CAAC;GACnB;;EAED,OAAO;IACL,MAAA,IAAI;GACL,CAAC;CACH,GAAG,CAAC,AAEL,AAA6B;;ACjD7B;;;;AAIA,AAAOA,IAAM,oBAAoB,GAAG,aAAa,CAAC;;;;;;AAMlD,AAAOA,AAAmC;;;;;;AAM1C,AAAOA,AAAiC;;;;;;AAMxC,AAAOA,AAAmC;;;;;GAM1C,AAAOA,AAKL;;;;;AC5BF,IAAqB,QAAQ,GAAC,iBAMjB,CAAC,OAAO,EAAE;EACrB,IAAM,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;EACzB,IAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;EAC3B,IAAM,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;EACzB,IAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,oBAAoB,CAAC;CACtD,CAAA,AACF;;ACfD,IAAM,eAAe;EAAkB,wBAM1B,CAAC,OAAO,EAAE;IACnBE,WAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;IACf,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IACvB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;IAC/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;IACjC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;GAClC;;;;0DAAA;;;EAZ2B,QAa7B,GAAA,AAED,AAA+B;;ACf/B,IAAM,UAAU;EAAyB,mBAC5B,CAAC,OAAO,EAAE;IACnBA,kBAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;IAEf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC;;IAEhCF,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;IAEvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;IAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,iBAAiB,CAAC;IAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;GAC9B;;;;gDAAA;;;EAXsB,eAYxB,GAAA,AAED,AAA0B;;ACbnBA,IAAM,mBAAmB,GAAG,KAAK,CAAC;;ACAzC,IAAM,WAAW;EAAyB,oBAC7B,CAAC,OAAO,EAAE;IACnBE,kBAAK,KAAA,CAAC,MAAA,OAAO,CAAC,CAAC;;IAEf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC;;IAE9BF,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;IAEvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC;IACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;IAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;;IAElCA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;IAEzB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,mBAAmB,CAAC;GAClD;;;;kDAAA;;;EAfuB,eAgBzB,GAAA,AAED,AAA2B;;ACjB3B,gBAAe;EACb,YAAA,UAAU;EACV,aAAA,WAAW;EACX,iBAAA,eAAe;CAChB,CAAC;;ACRF;;;AAGA,AAAe,SAAS,gBAAgB,CAAC,SAAS,EAAE;EAClDA,IAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE7D,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1B;;ACJc,SAAS,WAAW,CAAC,GAAG,EAAE;EACvCA,IAAM,GAAG,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;EAClCC,IAAI,IAAI,GAAG,KAAK,CAAC;;EAEjB,IAAI,GAAG,KAAK,IAAI,EAAE;IAChB,IAAI,GAAG,OAAO,CAAC;GAChB,MAAM,IAAI,GAAG,KAAK,KAAK,EAAE;IACxB,IAAI,GAAG,QAAQ,CAAC;GACjB;;EAED,OAAO,IAAI,CAAC;CACb;;ACdD;;;;;AAKA,AACA,AACA,AACA,AACA,AAEAD,IAAM,eAAe,GAAG,CAAC,YAAG;;;;;EAK1BA,IAAM,eAAe,GAAG,EAAE,CAAC;;;;;;EAM3B,SAAS,MAAM,CAAC,OAAO,EAAE;IACvB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;;IAE9DA,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;IAE1B,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACvC,MAAM,IAAI,cAAc,EAAC,mDAAkD,GAAE,IAAI,EAAG,CAAC;KACtF;;IAED,OAAO,IAAI,SAAS,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;GACjE;;;;;;;EAOD,SAAS,GAAG,CAAC,YAAY,EAAE;IACzBC,IAAI,OAAO,GAAG,YAAY,CAAC;;IAE3B,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;MAC1B,OAAO,GAAG;QACR,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,YAAY;OAClB,CAAC;KACH;;IAEDD,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IACxBA,IAAM,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;;IAE5C,IAAI,cAAc,EAAE;MAClB,OAAO,cAAc,CAAC;KACvB;;IAEDA,IAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;;IAEjC,eAAe,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;;IAEhC,OAAO,QAAQ,CAAC;GACjB;;EAED,OAAO;IACL,KAAA,GAAG;GACJ,CAAC;CACH,GAAG,CAAC,AAEL,AAA+B;;ACpE/BA,IAAM,wBAAwB,GAAG,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,SAAS,KAAK,QAAQ;EACzF,OAAO,QAAQ,KAAK,UAAU,CAAC;;;;;;;AAOjC,SAAS,iBAAiB,CAAC,QAAQ,EAAE;EACnC,IAAI,wBAAwB,EAAE;IAC5B,OAAO,OAAO,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC;GAChD;;EAEDA,IAAM,OAAO,GAAG,EAAE,CAAC;;EAEnB,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,mBAAmB,CAAC;CAChE;;;;;;;AAOD,AAAe,SAAS,UAAU,CAAC,QAAQ,EAAE;EAC3C,OAAO,QAAQ,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;CAChD;;ACvBD,IAAM,KAAK,GAAC,cACC,CAAC,OAAY,EAAE,KAAa,EAAE;mCAAtB,GAAG,EAAE,CAAO;+BAAA,GAAG,KAAK;;EACvC,IAAM,KAAK,EAAE;IACX,IAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GAC/B,MAAM;IACP,IAAM,CAAC,KAAK,GAAG,OAAO,CAAC;GACtB;CACF,CAAA;;AAEH,gBAAE,WAAW,yBAAC,EAAE,EAAE;EAChB,IAAM,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACrB,MAAQ,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;GAC9C;CACF,CAAA;;;;;AAKH,gBAAE,KAAK,qBAAG;;;EACR,IAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC3B,OAAS,KAAK,CAAC,MAAM,EAAE;IACrB,IAAQ,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;IAChC,OAAEG,MAAI,EAAC,IAAI,MAAA,CAAC,KAAA,OAAU,CAAC,CAAC;GACvB;YAAA;CACF,CAAA;;;;;;;AAOH,gBAAE,IAAI,kBAAC,EAAE,EAAE,IAAS,EAAE;+BAAP,GAAG,EAAE;;EAClB,IAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;EACvB,EAAI,MAAA,CAAC,QAAA,IAAO,CAAC,CAAC;CACb,CAAA;;AAEH,gBAAE,IAAI,oBAAU;;;;EACd,OAAE,IAAI,EAAC,IAAI,MAAA,CAAC,KAAA,IAAO,CAAC,CAAC;YAAA;CACpB,CAAA,AAGH,AAAqB;;ACzCrB,IAAM,aAAa;EAAe,sBAOrB,CAAC,GAAG,EAAE,OAAY,EAAE,KAAa,EAAE;qCAAtB,GAAG,EAAE,CAAO;iCAAA,GAAG,KAAK;;IAC1CD,QAAK,KAAA,CAAC,MAAA,OAAO,EAAE,KAAK,CAAC,CAAC;;IAEtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;;;sDAAA;;;;;;;;EAQD,wBAAA,SAAS,uBAAC,UAAU,EAAE;IACpBF,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;IAEhC,IAAI;MACF,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KACtB,CAAC,OAAO,CAAC,EAAE;MACV,MAAM,IAAI,cAAc,EAAC,eAAc,GAAE,UAAU,sBAAkB,EAAE,CAAC;KACzE;;IAED,OAAO,EAAE,CAAC;GACX,CAAA;;;;;;;EAOD,wBAAA,IAAI,kBAAC,UAAU,EAAE,UAAe,EAAE;2CAAP,GAAG,EAAE;;IAC9B,IAAI,CAAC,UAAU,EAAE;MACf,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAC;KAC9D;;IAEDE,kBAAK,CAAC,IAAI,KAAA,CAAC,MAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;GACpD,CAAA;;;EA1CyB,KA2C3B,GAAA,AAED,AAA6B;;AC/C7B;AACA,AACA,AACA,AACA,AAEAF,IAAM,IAAI,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;;AAE/BA,IAAM,SAAS,GAAG;EAChB,IAAI,EAAE,UAAC,OAAO,EAAE;IACdA,IAAM,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9C,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;OACzB,IAAI,CAAC,YAAG;;OAER,CAAC,CAAC;GACN;CACF,CAAC;;AAEFA,IAAM,WAAW,GAAG,UAAU,CAAC;AAC/BA,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AACnE,OAAO,CAAC,KAAK,EAAE,CAAC;AAChB,CAAC,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,AAEzB,AAAyB;;;;"}